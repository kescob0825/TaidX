plugins {
    // Uncomment and use these plugins if needed
    // id 'com.github.spotbugs' version '4.5.1'
    // id 'checkstyle'
}

apply plugin: 'application'

// Gradle wrapper configuration
wrapper {
    gradleVersion = '7.5'
    distributionType = Wrapper.DistributionType.BIN
}

// Application plugin configuration
application {
    mainClass = 'memoranda.Start'
}

// Compiler options
compileJava {
    options.encoding = 'UTF-8'
}

// Repositories for dependencies
repositories {
    mavenCentral()
}

// Dependencies for the project
dependencies {
    implementation 'com.io7m.xom:xom:1.2.+'
    implementation 'net.sourceforge.nekohtml:nekohtml:1.9.+'
}

// Task to create a fat JAR
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    archiveBaseName = 'jdlafond_ruebezahl'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

// // Define the Java source and target compatibility
java {
  sourceCompatibility = '18.0.2'
  targetCompatibility = '18.0.2'
}



///////////////////////////////////////////////////////////////////////
// Configure Checkstyle
/////////////////////////////////////////////////////////////////////
// apply plugin: 'checkstyle'
// checkstyle {
//   // Keep checkstyle a little quieter
//   ignoreFailures = true
//   showViolations = false
// }

// tasks.withType(Checkstyle) {
  
//   reports {
//     html.enabled = true
//     xml.enabled = false
//   }
//   // include '**/*.java'
//   include '**/ui/App.java'
//  }

// checkstyle {
//     toolVersion = "8.8"
// }


///////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////
// To generate an HTML report instead of XML
// spotbugsMain {
//     reports {
//         xml.enabled = false
//         html.enabled = true
//     }
// }
// spotbugs {
//     toolVersion = '4.2.2'
//     ignoreFailures = true
//     showProgress = true
//     effort = 'max'
// }
